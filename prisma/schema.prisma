// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Modelo para la base de datos POS (siscontr_pos37)
model Product {
  id              Int      @id @default(autoincrement())
  name            String
  price           Decimal  @db.Decimal(10, 2)
  image           String?
  category        String
  preparationArea String   @default("kitchen") // kitchen, cafeteria, bar
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("products")
}

model Table {
  id              Int      @id @default(autoincrement())
  number          Int      @unique
  x               Int      @default(0)
  y               Int      @default(0)
  width           Int      @default(120)
  height          Int      @default(80)
  seats           Int      @default(4)
  status          String   @default("available") // available, occupied, reserved, needs-cleaning
  shape           String   @default("rectangle") // rectangle, circle
  assignedWaiter  String?
  section         String?
  location        String?
  notes           String?
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  orders TableOrder[]

  @@map("tables")
}

model TableOrder {
  id          String   @id @default(cuid())
  tableId     Int
  table       Table    @relation(fields: [tableId], references: [id])
  items       Json     // Array de productos con cantidad
  total       Decimal  @db.Decimal(10, 2)
  status      String   @default("active") // active, completed, cancelled, split
  orderType   String   @default("dine-in") // dine-in, online, presencial
  waiter      String?
  customerInfo Json?   // Información del cliente
  bills       Json?    // Array de facturas divididas
  splitMode   Boolean  @default(false)
  printedAreas Json?   // Áreas donde se imprimió la comanda
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("table_orders")
}

model OnlineOrder {
  id           String   @id @default(cuid())
  customerName String
  customerPhone String
  customerAddress String?
  items        Json     // Array de productos con cantidad
  total        Decimal  @db.Decimal(10, 2)
  status       String   @default("pending") // pending, confirmed, preparing, delivered, cancelled
  notes        String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("online_orders")
}

model Waiter {
  id        Int      @id @default(autoincrement())
  name      String
  code      String   @unique
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("waiters")
}

model KitchenOrder {
  id          String   @id @default(cuid())
  tableId     Int?
  orderId     String
  items       Json     // Productos para preparar
  area        String   // kitchen, cafeteria, bar
  status      String   @default("pending") // pending, preparing, ready, delivered
  priority    Int      @default(1)
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("kitchen_orders")
} 